
public class RSA {
	private long p, y, e, eg, n, emes, d;
	private int message;
	
	public RSA(){
		
	}
	
	public  RSA(int mes, long str){
		message = mes;
		PNG x = new PNG();
		x.generate(str);
		p = x.getP();
		y = x.getY();
		n = p*y;
		eg = (p-1)*(y-1);
	}
	
	public void generateKeys(long str){
		PNG x = new PNG();
		x.generate(str);
		p = x.getP();
		y = x.getY();
		n = p*y;
		eg = (p-1)*(y-1);
	}
	
	public void setKey(long a, long b){
		p = a;
		y = b;
	}
	
	public void setMessage(int mes){
		message = mes;
	}
	
	public long encode(){
		emes = (long) (Math.pow(message, e)%(n));
		
		return emes;
		
	}
	
	public long decode(){
		d = (1%eg)/e;
		message = (int) (Math.pow(emes, d)%(n));
		
		return message;
	}
	
	public static void main(String args[]){
		RSA enc = new RSA();
		enc.setKey(3, 13);
		enc.setMessage(15);
		System.out.println(enc.encode());
		System.out.println(enc.decode());
	}
}
